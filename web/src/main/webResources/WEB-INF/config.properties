## Data directory configuration
# CSW harvester save a copy of harvested record in data.dir/harvested_data/csw
# Service/dataset analysis task save links to be indexed in data.dir/service-dataset-indexer_data/tasks
# Validation task save results in data.dir/validation-checker_data/tasks
data.dir=${data.dir}


## Solr configuration
# Solr server URL eg. http://localhost:8983
solr.server.url=${webapp.url}
solr.server.core=data

# Solr server credentials
solr.server.user=${webapp.username}
solr.server.password=${webapp.password}



## CSW harvester configuration
# Folder containing the configuration file and
# the tasks folder. The task folder is polled for
# any harvesting tasks to create.
harvester.csw.config.folder=${data.dir}/harvester/

# Time in ms to poll for new tasks.
harvester.csw.tasks.delay=10000

# Number of records per page when calling a GetRecords operation
harvester.csw.getRecords.maxRecords=100

# File with the list of CSW to harvest
harvester.csw.config.filename=config-harvesters.xml



## Tasks / Service and dataset association analyzer configuration
# The search filter (ie. a Solr query).
# TODO: Do not require URL encoded value
# eg. only on territory
task.service-dataset-indexer.filter=%2BresourceType%3Aservice

# The field to return in the response
task.service-dataset-indexer.fields=id,recordOperateOn,serviceType,harvesterId

# The task folder is polled at regular interval to index
# any associations found.
task.service-dataset-indexer.folder=${data.dir}/service-dataset-indexer_data/tasks

# Time in ms to poll for new associations to index.
task.service-dataset-indexer.delay=10000

# Number of records per page
task.service-dataset-indexer.records.per.page=100



## Tasks / Validation configuration
# The task folder is polled at regular interval to index
# any validation report generated.
task.validation-checker.folder=${data.dir}/validation-checker_data/tasks

# Time in ms to poll for new associations to index.
task.validation-checker.delay=10000

# The search filter (ie. a Solr query).
# TODO: Do not require URL encoded value
# eg. all none validated records
# This filter is not relevant because the process will
# do paging over the set of records but the number of
# valid records will change over time.
#solr.select.filter=+documentType:metadata -isValid:[* TO *]
task.validation-checker.filter=%2BdocumentType%3Ametadata
#solr.select.filter=%2BdocumentType%3Ametadata+-isValid%3A%5B*+TO+*%5D
# It's better to validate a set of record with a filter
# which is not affected by the process itself
# eg. territory, documentType
#task.validation-checker.filter=id%3A0a01b844-d4e1-4f9c-b1a7-f7fc71b2ee5a
# eg. only one record
#task.validation-checker.filter=id:570896ed-0462-46e5-bc7b-eaae317c5038
# eg. only on territory
#task.validation-checker.filter=territory:fi

# The field to return in the response
# * The document contains the XML document to validate against
# the validation engine (eg. XSD, Remote service)
# * The id is used to update the index with the results.
task.validation-checker.fields=document,id

# Number of records per page
task.validation-checker.records.per.page=100

# INSPIRE remote service validation
task.validation-checker.inspire.validator.url=http://inspire-geoportal.ec.europa.eu/GeoportalProxyWebServices/resources/INSPIREResourceTester
#task.validation-checker.inspire.validator.url=http://localhost/GeoportalProxyWebServices/resources/INSPIREResourceTester

# Threshold used to define a valid record
# when the completness indicator is above this
# value
task.validation-checker.inspire.threshold=75.0