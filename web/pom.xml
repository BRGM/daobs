<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.daobs</groupId>
  <artifactId>web</artifactId>
  <name>Solr and web application</name>
  <packaging>war</packaging>
  <version>0.1-SNAPSHOT</version>

  <parent>
    <groupId>org.daobs</groupId>
    <artifactId>daobs</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>

  <profiles>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <build.profile.id>dev</build.profile.id>
      </properties>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-velocity</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-dataimporthandler</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-solrj</artifactId>
    </dependency>

    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>saxon</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>saxon-dom</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp.jstl</groupId>
      <artifactId>jstl-api</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
    </dependency>


    <!-- A simple mathematical expression parser
    http://www.objecthunter.net/tinybo/blog/articles/86
    http://projects.congrace.de/exp4j/index.html
    -->
    <dependency>
      <groupId>de.congrace</groupId>
      <artifactId>exp4j</artifactId>
      <version>0.3.11</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <version>1.9.13</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>1.9.13</version>
    </dependency>

    <dependency>
      <groupId>org.daobs</groupId>
      <artifactId>daobs-core</artifactId>
      <version>0.1-SNAPSHOT</version>
    </dependency>

    <!-- Spring Security -->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
    </dependency>


    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-ldap</artifactId>
    </dependency>

    <!--
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-dataimporthandler-extras</artifactId>
      <version>${solr.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-clustering</artifactId>
      <version>${solr.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-langid</artifactId>
      <version>${solr.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-cell</artifactId>
      <version>${solr.version}</version>
    </dependency>-->
  </dependencies>
  <build>
    <finalName>solr</finalName>
    <filters>
      <filter>${project.basedir}/profiles/${build.profile.id}/config.properties</filter>
    </filters>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <configuration>
          <files>
            <!-- Properties are read from profile specific property file -->
            <file>${project.basedir}/profiles/${build.profile.id}/config.properties</file>
          </files>
        </configuration>
        <executions>
          <!-- Load properties for the default lifecycle -->
          <execution>
            <id>default-lifecycle-properties</id>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
          </execution>
          <!-- Load properties for the clean lifecycle -->
          <execution>
            <id>clean-lifecycle-properties</id>
            <phase>pre-clean</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <!-- Copy Solr cores and config to the build directory.
        This folder is the solr.solr.home directory.
        -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>copy-solr-config</id>
            <phase>compile</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${solr.core.directory}</outputDirectory>
              <resources>
                <!--
                Copy solr.xml to correct directory and applies properties
                filtering to it.
                -->
                <resource>
                  <directory>${project.basedir}/src/main/resources</directory>
                  <filtering>true</filtering>
                  <targetPath>${project.build.directory}/${solr.core.directory}</targetPath>
                  <includes>
                    <include>solr.xml</include>
                  </includes>
                </resource>
                <!-- Copy configuration files -->
                <resource>
                  <directory>${project.basedir}/src/main/config</directory>
                  <targetPath>${project.build.directory}/${solr.core.directory}</targetPath>
                </resource>
              </resources>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <plugin>
        <!-- Add banana to the WAR file. -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <webResources>
            <resource>
              <directory>${project.basedir}/../dashboard/target/web</directory>
            </resource>
          </webResources>
        </configuration>
      </plugin>


      <plugin>
        <!-- Running the application using Tomcat.
        This solves the REST API access StackOverflow issue on Jetty
        when accessing pages likes:
        http://localhost:8983/solr/data/schema/analysis/stopwords/english.
        -->
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <contextReloadable>true</contextReloadable>
          <!-- http port -->
          <port>${solr.server.port}</port>
          <!-- application path always starts with /-->
          <path>/solr</path>
          <!-- optional path to a context file
          <contextFile>${tomcatContextXml}</contextFile>-->
          <!-- optional system propoerties you want to add -->
          <systemProperties>
            <solr.solr.home>${solr.solr.home}</solr.solr.home>
          </systemProperties>
          <!-- if you want to use test dependencies rather than only runtime -->
          <useTestClasspath>false</useTestClasspath>
          <!-- optional if you want to add some extra directories into the classloader -->
          <!--<additionalClasspathDirs>
            <additionalClasspathDir>${project.basedir}/../dashboard/target/web</additionalClasspathDir>
          </additionalClasspathDirs>-->
        </configuration>
      </plugin>
    </plugins>
  </build>
  <properties>
    <solr.server.port>8983</solr.server.port>
    <solr.server.stopport>9966</solr.server.stopport>
    <solr.core.directory>solr-cores</solr.core.directory>
    <solr.solr.home>${project.basedir}/target/${solr.core.directory}</solr.solr.home>
    <spring.version>3.2.5.RELEASE</spring.version>
  </properties>
</project>