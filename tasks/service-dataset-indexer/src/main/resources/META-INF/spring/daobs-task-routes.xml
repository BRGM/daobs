<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cm="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring
        http://camel.apache.org/schema/spring/camel-spring.xsd">

  <bean id="bridgePropertyPlaceholder"
        class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer">
    <property name="location" value="/WEB-INF/config.properties"/>
  </bean>

  <bean id="activemq"
        class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="brokerURL" value="vm://localhost" />
  </bean>

  <bean id="taskPagination" class="org.daobs.routing.utility.Pagination">
    <property name="recordsPerPage" value="${task.service-dataset-indexer.records.per.page}"/>
  </bean>
  <bean id="utility" class="org.daobs.routing.utility.Utility"/>

  <cm:errorHandler id="loggingErrorHandler"
                      type="LoggingErrorHandler"
                      logName="daobs.tasks.service-dataset-indexer"
                      level="DEBUG"/>

  <cm:camelContext
          xmlns:gmd="http://www.isotc211.org/2005/gmd"
          xmlns:gco="http://www.isotc211.org/2005/gco"
          xmlns:geoportal="http://inspire.ec.europa.eu/schemas/geoportal/1.0"
          id="task.service-dataset-indexer"
          errorHandlerRef="loggingErrorHandler"
          useMDCLogging="true">

    <cm:threadPoolProfile id="myDefaultProfile"
                          defaultProfile="true"
                          poolSize="10"
                          maxPoolSize="10"/>

    <cm:onException>
      <cm:exception>org.apache.camel.component.http4.HttpOperationFailedException</cm:exception>
      <cm:continued>
        <cm:constant>true</cm:constant>
      </cm:continued>
      <cm:log message="Oops, something went wrong: $simple{exception.message}."
              loggingLevel="ERROR"
              logName="org.daobs.task.ServiceDatasetIndexer"/>
      <cm:log message="$simple{exception.responseBody}"
              loggingLevel="ERROR"
              logName="org.daobs.task.ServiceDatasetIndexer"/>
      <cm:log message="$simple{exception.stacktrace}"
              loggingLevel="ERROR"
              logName="org.daobs.task.ServiceDatasetIndexer"/>
      <cm:to uri="log:org.daobs.task.ServiceDatasetIndexer?showBody=true"/>
    </cm:onException>


    <cm:route id="route-task-start" autoStartup="false">
      <cm:from uri="timer://start?repeatCount=1"/>
      <cm:to uri="direct:task-analyze-start"/>
    </cm:route>

    <cm:route id="route-task-jms-start">
      <cm:from uri="activemq:task-analyze"/>
      <cm:to uri="direct:task-analyze-start"/>
    </cm:route>

    <cm:route id="route-task-analyze">
      <cm:description>
        Query document to index.

        Loop on all records.

        Check for all associated datasets.
      </cm:description>
      <cm:from uri="direct:task-analyze-start"/>


      <cm:log message="Background task indexing all service/data sets links ..."
              loggingLevel="INFO"
              logName="org.daobs.task.ServiceDatasetIndexer"/>



      <!-- Get number of records to validate -->
      <cm:setHeader headerName="CamelHttpMethod">
        <cm:constant>GET</cm:constant>
      </cm:setHeader>
      <cm:setHeader headerName="Exchange.HTTP_URI">
        <cm:simple>{{solr.server.url}}/data/select?q={{task.service-dataset-indexer.filter}}&amp;fl={{task.service-dataset-indexer.fields}}&amp;wt=xml&amp;start=0&amp;rows=0</cm:simple>
      </cm:setHeader>
      <cm:to uri="http4://solr.server.url?authUsername={{solr.server.user}}&amp;authPassword={{solr.server.password}}&amp;authenticationPreemptive=true&amp;throwExceptionOnFailure=false"/>
      <cm:convertBodyTo type="org.w3c.dom.Document"/>
      <cm:choice>
        <cm:when>
          <cm:xpath>//result[@numFound > 0]</cm:xpath>
          <cm:setHeader headerName="numberOfRecordsMatched">
            <cm:xpath resultType="java.lang.String">
              //result/@numFound
            </cm:xpath>
          </cm:setHeader>
          <cm:log message="$simple{header.numberOfRecordsMatched} services record(s) to index."
                  loggingLevel="INFO"
                  logName="org.daobs.task.ServiceDatasetIndexer"/>

          <cm:split parallelProcessing="false">
            <cm:method bean="taskPagination" method="getPages"/>
            <cm:setHeader headerName="start">
              <cm:simple>${bean:taskPagination?method=getStart}</cm:simple>
            </cm:setHeader>
            <cm:setHeader headerName="row">
              <cm:simple>{{task.service-dataset-indexer.records.per.page}}</cm:simple>
            </cm:setHeader>

            <cm:log message="Page #$simple{property.CamelSplitIndex} - start: $simple{header.start} | row: $simple{header.row}."
                    loggingLevel="INFO"
                    logName="org.daobs.task.ServiceDatasetIndexer"/>

            <cm:setHeader headerName="CamelHttpMethod">
              <cm:constant>GET</cm:constant>
            </cm:setHeader>
            <cm:setHeader headerName="Exchange.HTTP_URI">
              <cm:simple>{{solr.server.url}}/data/select?q={{task.service-dataset-indexer.filter}}&amp;fl={{task.service-dataset-indexer.fields}}&amp;wt=xml&amp;start=$simple{header.start}&amp;rows=$simple{header.row}</cm:simple>
            </cm:setHeader>
            <cm:to uri="http4://solr.server.url?authUsername={{solr.server.user}}&amp;authPassword={{solr.server.password}}&amp;authenticationPreemptive=true&amp;throwExceptionOnFailure=false"/>
            <cm:convertBodyTo type="org.w3c.dom.Document"/>
            <cm:split parallelProcessing="true">
              <cm:xpath>//doc</cm:xpath>
              <!-- Retrieve UUID from Solr response -->
              <cm:setHeader headerName="documentIdentifier">
                <cm:xpath resultType="java.lang.String">doc/str[@name = 'id']</cm:xpath>
              </cm:setHeader>
              <cm:setHeader headerName="harvesterId">
                <cm:xpath resultType="java.lang.String">doc/str[@name = 'harvesterId']</cm:xpath>
              </cm:setHeader>
              <cm:setHeader headerName="serviceType">
                <cm:xpath resultType="java.lang.String">doc/arr[@name = 'serviceType']/str/text()</cm:xpath>
              </cm:setHeader>
              <!-- Compute filename suffix for saving update queries -->
              <cm:setHeader headerName="stringToEncrypt">
                <cm:simple>$simple{header.documentIdentifier}</cm:simple>
              </cm:setHeader>
              <cm:setHeader headerName="fileNameSuffix">
                <cm:simple>bean:utility?method=encrypt</cm:simple>
              </cm:setHeader>


              <cm:log message="Record identifier is '$simple{header.documentIdentifier}'. Query file name suffix is '$simple{header.fileNameSuffix}'."
                      loggingLevel="INFO"
                      logName="org.daobs.task.ServiceDatasetIndexer"/>

              <cm:split parallelProcessing="true">
                <cm:xpath>doc/arr[@name = 'recordOperateOn']/str[text() != '']/text()</cm:xpath>
                <cm:to uri="direct:index-association"/>
              </cm:split>
            </cm:split>
          </cm:split>
        </cm:when>
        <cm:otherwise>
          <cm:log message="No record found. ${body}"
                  loggingLevel="INFO"
                  logName="org.daobs.task.ServiceDatasetIndexe"/>
        </cm:otherwise>
      </cm:choice>
    </cm:route>



    <cm:route id="route-index-association">
      <cm:from uri="direct:index-association"/>
      <cm:setHeader headerName="beginTime">
        <cm:simple>${date:now:yyyyMMdd'T'HH':'mm':'SS}</cm:simple>
      </cm:setHeader>
      <cm:log message="Checking association between '$simple{header.serviceType}' service record UUID '$simple{header.documentIdentifier}' and data set '{body}'. Start at $simple{header.beginTime}."
              loggingLevel="INFO"
              logName="org.daobs.task.ServiceDatasetIndexer"/>

      <cm:setBody>
        <cm:simple>
          <![CDATA[<add commitWithin="10000">
              <doc>
                <field name="id"><![CDATA[$simple{body}]]><![CDATA[]]]]><![CDATA[>]]><![CDATA[</field>
                <field name="recordOperatedByType" update="add">$simple{header.serviceType}</field>
                <field name="recordOperatedBy" update="add">$simple{header.documentIdentifier}</field>
              </doc>
            </add>]]>
          <!--<![CDATA[<add commitWithin="10000">
            <doc>
              <field name="documentType">association</field>
              <field name="harvesterId">$simple{header.harvesterId}</field>
              <field name="id"><![CDATA[association-between-$simple{header.documentIdentifier}-and-$simple{body}]]><![CDATA[]]]]><![CDATA[>]]><![CDATA[</field>
              <field name="record">$simple{header.documentIdentifier}</field>
              <field name="associationType" update="add">$simple{header.serviceType}</field>
              <field name="relatedTo">$simple{body}</field>
            </doc>
          </add>]]>-->
        </cm:simple>
      </cm:setBody>
      <cm:to uri="file:{{task.service-dataset-indexer.folder}}?fileName=index-association-$simple{header.fileNameSuffix}-$simple{property.CamelSplitIndex}.xml&amp;charset=utf-8"/>
    </cm:route>

    <cm:route id="save-association">
      <cm:from uri="file:{{task.service-dataset-indexer.folder}}?consumer.delay={{task.service-dataset-indexer.delay}}"/>
      <cm:log message="Updating index with '$simple{body}' ..."
              loggingLevel="INFO"
              logName="org.daobs.task.ServiceDatasetIndexer"/>
      <cm:setHeader headerName="Exchange.HTTP_URI">
        <cm:simple>{{solr.server.url}}/update</cm:simple>
      </cm:setHeader>
      <cm:setHeader headerName="camelHttpMethod">
        <cm:constant>POST</cm:constant>
      </cm:setHeader>
      <cm:setHeader headerName="Content-Type">
        <cm:constant>application/xml</cm:constant>
      </cm:setHeader>
      <cm:to uri="http4://solr.server.url?authUsername={{solr.server.user}}&amp;authPassword={{solr.server.password}}&amp;authenticationPreemptive=true&amp;throwExceptionOnFailure=false"/>
      <cm:log message="Solr response: ${body}."
              loggingLevel="DEBUG"
              logName="org.daobs.task.ServiceDatasetIndexer"/>
    </cm:route>
  </cm:camelContext>
</beans>
